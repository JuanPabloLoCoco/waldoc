{"version":3,"sources":["utils/validations.js","pages/register/index.js","i18n/index.js","i18n/es.js","i18n/en.js","constants/constants.js","utils/BaseClient.js","utils/apiClient.js"],"names":["isValidEmail","email","RegExp","test","Register","props","API","ApiClient","state","password","confirmPassword","name","lastName","address","phoneNumber","gender","license","errors","current","submitted","loading","loadingValidation","role","repeatedEmail","repeatedLicense","this","match","params","setState","e","preventDefault","target","value","length","phone","studies","passwordsMatch","get","then","response","data","emailExists","catch","err","body","firstName","passwordConfirmation","post","console","log","sex","licence","licenceExists","className","i18n","t","hasErrors","type","aria-describedby","placeholder","onChange","handleChange","renderEmptyError","renderSpecificError","sizeUnit","size","color","onClick","handleSubmit","style","marginTop","marginBottom","labelPlacement","icons","icon","faCoffee","title","faCheckCircle","to","renderBasicForm","renderPersonalForm","renderButton","React","Component","use","LanguageDetector","init","fallbackLng","debug","interpolation","escapeValue","resources","es","translation","home","jumbotronTitle","placeHolderDoctor","labelDoctor","placeHolderSpeciality","placeHolderInsurance","searchButton","subtitle","searchTitle","searchSubtitle","chooseTitle","chooseSubtitle","reserveTitle","reserveSubtitle","loadingSpecialties","loadingInsurances","navigation","patientRegistrationTitle","doctorRegistrationTitle","logInButton","myAccountTitle","logOutButton","noResults","changeFilters","filters","register","specialist","city","favoriteTitle","description","insurancesPlans","list","placeHolderName","workingDay","notAvailable","certificate","languages","review","reviewThanks","appointment","stars","starsOption","comments","placeHolderComments","button","reviewTitle","leaveReview","at","cancel","futureTitle","historicalTitle","reserve","selectDateTime","date","time","error","reserved","close","problem","toHome","login","welcome","placeHolderEmail","placeHolderasPsword","accountQuestion","registerPatient","registerDoctor","or","emptyField","placeHolderStudies","descriptionStudies","descriptionCertificate","selectLanguages","speciality","selectSpeciality","selectedSpeciality","selectInsurance","selectInsuranceLabel","workingHours","placeHolderWorkingHoursStart","placeHolderWorkingHoursFinish","errorDay","continueButton","backButton","me","completeProfTitle","notRegister","activatedAccount","activatedAccessAccount","licenseValidation","emailValidation","validEmail","validPassword","notMatchingPassword","matchingPassword","placeHolderPassword","validName","placeHolderLastName","validLastName","placeHolderAddress","validAddress","placeHolderPhoneNumber","validPhoneNumber","optionGender","male","female","placeHolderLicense","asPatient","asDoctor","basicInfo","personalInfo","emailMessage","photo","photoUpload","photoUploadError","placeHolderCertificate","favorite","remove","add","week","monday","tuesday","wednesday","thursday","friday","saturday","sunday","account","accountInfo","patientAppointments","en","API_URL","BaseClient","token","user","auth","headers","instance","axios","create","baseURL","timeout","interceptors","errorResponse","history","push","status","Promise","reject","url","conf","resolve","delete","head","options","put","patch"],"mappings":"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","file":"static/js/18.e73d2f31.chunk.js","sourcesContent":["export const isValidEmail = (email) => {\n  const validEmailRegex =\n    RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n  return validEmailRegex.test(email)\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { isValidEmail } from '../../utils/validations';\nimport BounceLoader from 'react-spinners/BounceLoader';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport 'rc-steps/assets/index.css';\nimport 'rc-steps/assets/iconfont.css';\nimport Steps, { Step } from 'rc-steps';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { ApiClient } from '../../utils/apiClient';\nimport i18n from \"../../i18n\";\nimport phone from 'phone';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.API = new ApiClient(props);\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      name: '',\n      lastName: '',\n      address: '',\n      phoneNumber: '',\n      gender: '',\n      license: '',\n      errors: {\n        email: false,\n        password: false,\n        confirmPassword: false,\n        name: false,\n        lastName: false,\n        address: false,\n        phoneNumber: false,\n        gender: false,\n        license: false,\n      },\n      current: 0,\n      submitted: false,\n      loading: false,\n      loadingValidation: false,\n      role: 'patient',\n      repeatedEmail: false,\n      repeatedLicense: false,\n    };\n  }\n\n\n  componentDidMount() {\n    const { role } = this.props.match.params;\n    this.setState({ role });\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let errors = this.state.errors;\n\n    switch (name) {\n      case 'name':\n        errors.name = value.length <= 2\n        break;\n      case 'lastName':\n        errors.lastName = value.length <= 1\n        break;\n      case 'phoneNumber':\n        errors.phoneNumber = phone(value, 'ARG', true).length === 0\n        break;\n      case 'email':\n        this.setState({ repeatedEmail: false });\n        errors.email = !isValidEmail(value)\n        break;\n      case 'password':\n        errors.password =  value.length < 6 || value.length > 56\n        break;\n      case 'confirmPassword':\n        errors.confirmPassword = value.length < 6\n        break;\n      case 'address':\n        errors.address = value.length <= 5\n        break;\n      case 'license':\n        errors.license = value.length <= 0 || value.length > 10\n        break;\n      case 'studies':\n        errors.studies = value.length <= 0\n        break;\n      case 'gender':\n        errors.gender = value === ''\n        break;\n      default:\n        break;\n    }\n\n    this.setState({errors, [name]: value })\n  }\n\n  handleSubmit() {\n    const { email, password, confirmPassword, name, lastName, address, phoneNumber, gender, current,\n      license, role, errors\n    } = this.state;\n\n    this.setState({ submitted: true });\n\n    if(current === 0) {\n      if(email && password && confirmPassword && this.passwordsMatch()) {\n        this.setState({ loadingValidation: true })\n        this.API.get(`/patient/email-exists?email=${email}`).then((response) => {\n          if(!response.data.emailExists) {\n            this.setState({ current: current + 1, submitted: false, loadingValidation: false })\n          } else {\n            this.setState({ loadingValidation: false, repeatedEmail: true })\n          }\n        }).catch(err => {\n          if(!err.response.data.emailExists) {\n            this.setState({ current: current + 1, submitted: false, loadingValidation: false })\n          } else {\n            this.setState({ loadingValidation: false, repeatedEmail: true })\n          }\n        })\n      }\n    } else if(current === 1) {\n      if(role === 'patient') {\n        if(name && lastName && phoneNumber && email && password && confirmPassword && !errors.name && !errors.lastName\n          && !errors.phoneNumber && !errors.email && !errors.password) {\n          const body = {\n            firstName: name,\n            lastName,\n            email,\n            password,\n            passwordConfirmation: confirmPassword,\n            phoneNumber,\n          }\n          this.setState({ loading: true })\n          this.API.post('/patient/register', body).then((response) => {\n            this.setState({ current: 2, loading: false });\n          }).catch(err => {\n            console.log({err});\n          })\n        }\n      } else if(role === 'specialist') {\n        if(name && lastName && phoneNumber && email && password && confirmPassword && address && gender && license\n          && !errors.name && !errors.lastName && !errors.phoneNumber && !errors.email && !errors.password\n          && !errors.address && !errors.gender && !errors.license) {\n          const body = {\n            firstName: name,\n            lastName,\n            email,\n            password,\n            passwordConfirmation: confirmPassword,\n            phoneNumber,\n            address,\n            sex: gender,\n            licence: license\n          }\n\n          this.setState({ loadingValidation: true })\n          this.API.get(`/doctor/licence-exists?licence=${license}`).then((response) => {\n            if(!response.data.licenceExists) {\n              console.log('response', response)\n              this.setState({ loading: true, loadingValidation: false, repeatedLicense: false })\n              this.API.post('/doctor/register', body).then((response) => {\n                this.setState({ current: 2, loading: false });\n              }).catch(err => {\n                console.log({err});\n              })\n            } else {\n              this.setState({ loadingValidation: false, repeatedLicense: true })\n            }\n          }).catch(err => {\n            if(!err.response.data.licenceExists) {\n              this.setState({ loading: true, loadingValidation: false, repeatedLicense: false })\n              this.API.post('/doctor/register', body).then((response) => {\n                this.setState({ current: 2, loading: false });\n              }).catch(err => {\n                console.log({err});\n              })\n            } else {\n              this.setState({ loadingValidation: false, repeatedEmail: true })\n            }\n          })\n        }\n      }\n    }\n  }\n\n  passwordsMatch() {\n    const { password, confirmPassword, errors } = this.state;\n    return password !== '' && confirmPassword !== '' && password === confirmPassword && !errors.password && !errors.confirmPassword ;\n  }\n\n  hasErrors(value, name) {\n    if(this.state.submitted) {\n      switch (name) {\n        case 'name':\n          return value.length <= 2\n        case 'lastName':\n          return value.length <= 1\n        case 'phoneNumber':\n          return phone(value, 'ARG', true).length === 0\n        case 'email':\n          return !isValidEmail(value)\n        case 'password':\n          return  value.length < 6 || value.length > 56\n        case 'confirmPassword':\n          return value.length < 6\n        case 'address':\n          return value.length <= 5\n        case 'license':\n          return value.length <= 0 || value.length > 10\n        case 'studies':\n          return  value.length <= 0\n        case 'gender':\n          return value === \"\"\n        default:\n          return false;\n      }\n    }\n    return false;\n  }\n\n  renderEmptyError(value) {\n    if(value === '' && this.state.submitted) {\n      return (\n        <div className=\"text-danger\">\n            {i18n.t('register.emptyField')}\n        </div>\n      )\n    }\n  }\n\n  renderSpecificError(value, name) {\n    if(value === '' && this.state.submitted) {\n      if(name === 'license') {\n        return (\n          <div className=\"text-danger\">\n              {i18n.t('register.licenseValidation')}\n          </div>\n        )\n      }\n    }\n  }\n\n\n  renderBasicForm(){\n    const { email, password, confirmPassword, errors, submitted, repeatedEmail } = this.state;\n    return(\n      <div>\n        <div className=\"form-group\">\n          <label className={(errors.email || this.hasErrors(email, 'email') || repeatedEmail ? 'text-danger' : '') + (!errors.email && !repeatedEmail &&email !== '' ? 'text-success' : '' )}>Email</label>\n          <input name=\"email\" value={email} type=\"email\" className={'form-control ' + (errors.email ||  this.hasErrors(email, 'email') || repeatedEmail  ? 'is-invalid' : '') + (!errors.email && !repeatedEmail && email !== '' ? 'is-valid' : '' )} aria-describedby=\"emailHelp\" placeholder={i18n.t('login.placeHolderEmail')} onChange={(e) =>this.handleChange(e)}/>\n          {\n            repeatedEmail &&\n            <div className=\"text-danger\">\n              {i18n.t('register.repeatedEmail')}\n            </div>\n          }\n          {\n            errors.email &&\n            <div className=\"text-danger\">\n              {i18n.t('register.emailValidation')}\n            </div>\n          }\n          {\n            !errors.email && !repeatedEmail &&email !== '' &&\n            <div className=\"text-success\">\n              {i18n.t('register.validEmail')}\n            </div>\n          }\n          {\n            this.renderEmptyError(email)\n          }\n        </div>\n        <div className=\"form-row\">\n          <div className=\"form-group col-md-6\">\n            <label className={(errors.password ||  this.hasErrors(password, 'password')) || (submitted && !this.passwordsMatch()) || (!this.passwordsMatch() && password !== '' && confirmPassword !== '') ? 'text-danger' : ''}>{i18n.t('login.password')}</label>\n            <input name=\"password\" value={password} type=\"password\" className={'form-control ' + (errors.password ||  this.hasErrors(password, 'password') || submitted && !this.passwordsMatch() || (!this.passwordsMatch() && password !== '' && confirmPassword !== '') ? 'is-invalid' : '') + (this.passwordsMatch() ? 'is-valid' : '')} placeholder={i18n.t('login.placeHolderasPsword')} onChange={(e) => this.handleChange(e)}/>\n            {\n              errors.password &&\n              <div className=\"text-danger\">\n                {i18n.t('register.validPassword')}\n              </div>\n            }\n            {\n              (submitted && !this.passwordsMatch() && password !== '' || (!this.passwordsMatch() && password !== '' && confirmPassword !== '')) &&\n              <div className=\"text-danger\">\n                  {i18n.t('register.notMatchingPassword')}\n              </div>\n            }\n            {\n              this.passwordsMatch() &&\n              <div className=\"text-success\">\n                  {i18n.t('register.matchingPassword')}\n              </div>\n            }\n            {\n              this.renderEmptyError(password)\n            }\n          </div>\n          <div className=\"form-group col-md-6\">\n            <label className={errors.confirmPassword ||  this.hasErrors(confirmPassword, 'confirmPassword') || (!this.passwordsMatch() && password !== '' && confirmPassword !== '') ? 'text-danger' : ''}>{i18n.t('register.confirmPassword')}</label>\n            <input name=\"confirmPassword\" value={confirmPassword} type=\"password\" className={'form-control ' + (errors.confirmPassword || this.hasErrors(confirmPassword, 'confirmPassword') || (!this.passwordsMatch() && password !== '' && confirmPassword !== '')? 'is-invalid' : '') + (this.passwordsMatch() ? 'is-valid' : '')} placeholder={i18n.t('register.placeHolderPassword')} onChange={(e) => this.handleChange(e)}/>\n            {\n              errors.confirmPassword &&\n              <div className=\"text-danger\">\n                  {i18n.t('register.validPassword')}\n              </div>\n            }\n            {\n              this.passwordsMatch() &&\n              <div className=\"text-success\">\n                  {i18n.t('register.matchingPassword')}\n              </div>\n            }\n            {\n              this.renderEmptyError(confirmPassword)\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  renderPersonalForm() {\n    const { name, lastName, address, phoneNumber, gender, errors, role, license, repeatedLicense } = this.state;\n    return(\n      <div>\n        <div className=\"form-row\">\n          <div className=\"form-group col-md-6\">\n            <label className={errors.name || this.hasErrors(name, 'name') ? 'text-danger' : ''}>{i18n.t('register.name')}</label>\n            <input name=\"name\" value={name} type=\"text\" className={'form-control ' + (errors.name || this.hasErrors(name, 'name') ? 'is-invalid' : '')} placeholder={i18n.t('register.placeHolderName')} onChange={(e) => this.handleChange(e)}/>\n            {\n              errors.name &&\n              <div className=\"text-danger\">\n                  {i18n.t('register.validName')}\n              </div>\n            }\n            {\n              this.renderEmptyError(name)\n            }\n          </div>\n          <div className=\"form-group col-md-6\">\n            <label className={errors.lastName || this.hasErrors(lastName, 'lastName')? 'text-danger' : ''}>{i18n.t('register.lastName')}</label>\n            <input name=\"lastName\" value={lastName} type=\"text\" className={'form-control ' + (errors.lastName || this.hasErrors(lastName, 'lastName') ? 'is-invalid' : '')} placeholder={i18n.t('register.placeHolderLastName')} onChange={(e) => this.handleChange(e)}/>\n            {\n              errors.lastName &&\n              <div className=\"text-danger\">\n                  {i18n.t('register.validLastName')}\n              </div>\n            }\n            {\n              this.renderEmptyError(lastName)\n            }\n          </div>\n        </div>\n        {\n          role !== 'patient' &&\n          <div className=\"form-group\">\n            <label className={errors.address || this.hasErrors(address, 'address') ? 'text-danger' : ''}>{i18n.t('register.address')}</label>\n            <input name=\"address\" value={address} type=\"text\" className={'form-control ' + (errors.address || this.hasErrors(address, 'address') ? 'is-invalid' : '')} aria-describedby=\"emailHelp\" placeholder={i18n.t('register.placeHolderAddress')} onChange={(e) =>this.handleChange(e)}/>\n            {\n              errors.address &&\n              <div className=\"text-danger\">\n                  {i18n.t('register.validAddress')}\n              </div>\n            }\n            {\n              this.renderEmptyError(address)\n            }\n          </div>\n        }\n        <div className=\"form-group\">\n          <label className={errors.phoneNumber || this.hasErrors(phoneNumber, 'phoneNumber') ? 'text-danger' : ''}>{i18n.t('register.phoneNumber')}</label>\n          <input name=\"phoneNumber\" value={phoneNumber} type=\"tel\" className={'form-control ' + (errors.phoneNumber || this.hasErrors(phoneNumber, 'phoneNumber') ? 'is-invalid' : '')} aria-describedby=\"emailHelp\" placeholder={i18n.t('register.placeHolderPhoneNumber')} onChange={(e) =>this.handleChange(e)}/>\n          {\n            errors.phoneNumber &&\n            <div className=\"text-danger\">\n                {i18n.t('register.validPhoneNumber')}\n            </div>\n          }\n          {\n            this.renderEmptyError(phoneNumber)\n          }\n        </div>\n        {\n          role !== 'patient' &&\n            <div>\n              <div className=\"form-group\">\n                <label className={errors.gender || this.hasErrors(gender, 'gender') ? 'text-danger' : ''}>{i18n.t('register.gender')}</label>\n                <select name=\"gender\" value={gender} className={'form-control ' + (errors.gender || this.hasErrors(gender, 'gender') ? 'is-invalid' : '')} onChange={(e) =>this.handleChange(e)}>\n                  <option value=\"\">{i18n.t('register.optionGender')}</option>\n                  <option value=\"M\">{i18n.t('register.male')}</option>\n                  <option value=\"F\">{i18n.t('register.female')}</option>\n                </select>\n                {\n                  this.renderEmptyError(gender)\n                }\n              </div>\n              <div className=\"form-group\">\n                <label className={errors.license || this.hasErrors(license, 'license') || repeatedLicense ? 'text-danger' : ''}>{i18n.t('register.license')}</label>\n                <input name=\"license\" value={license} type=\"text\" className={'form-control ' + (errors.license || this.hasErrors(license, 'license') || repeatedLicense ? 'is-invalid' : '')} aria-describedby=\"emailHelp\" placeholder={i18n.t('register.placeHolderLicense')} onChange={(e) =>this.handleChange(e)}/>\n                {\n                  repeatedLicense &&\n                  <div className=\"text-danger\">\n                    {i18n.t('register.repeatedLicense')}\n                  </div>\n                }\n                {\n                  this.renderSpecificError('license', license)\n                }\n              </div>\n            </div>\n        }\n      </div>\n    )\n  }\n\n  renderButton() {\n    const { current, loadingValidation } = this.state;\n    if(loadingValidation) {\n      return(\n        <div className=\"btn btn-primary custom-btn pull-right continue-btn\">\n          <PulseLoader\n            sizeUnit={\"px\"}\n            size={10}\n            color={'#FFF'}\n            loading={true}\n          />\n        </div>\n      )\n    }\n\n    if(current === 0) {\n      return(\n        <div onClick={() => this.handleSubmit()} className=\"btn btn-primary custom-btn pull-right\">{i18n.t('register.continueButton')}</div>\n        )\n    }\n    if(current === 1) {\n      return(\n        <div className=\"row container\">\n          <div onClick={() => this.setState({ current: this.state.current - 1 })} className=\"btn btn-secondary mr-2\">{i18n.t('register.backButton')}</div>\n          <div onClick={() => this.handleSubmit()} className=\"btn btn-primary custom-btn pull-right\">{i18n.t('register.me')}</div>\n        </div>\n      )\n    }\n  }\n\n\n\n  render() {\n    const { current, role, loading } = this.state;\n    if(loading) {\n      return (\n        <div className=\"body-background\">\n          <div className=\"container col-12-sm w-p-20\">\n            <div className=\"login-card w-shadow\">\n              <div className=\"center-horizontal\">\n                <BounceLoader\n                  sizeUnit={\"px\"}\n                  size={75}\n                  color={'rgb(37, 124, 191)'}\n                  loading={true}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"body-background\">\n        <div className=\"container col-12-sm w-p-20\">\n          <div className=\"login-card w-shadow\">\n            {\n              role === 'patient' && current <= 1 &&\n              <h3>{i18n.t('register.asPatient')}</h3>\n            }\n            {\n              role === 'specialist' && current <= 1 &&\n              <h3>{i18n.t('register.asDoctor')}</h3>\n            }\n            {\n              current <= 1 &&\n              <div style={{ marginTop: 32, marginBottom: 16 }}>\n                <Steps labelPlacement=\"vertical\" current={current} icons={ <FontAwesomeIcon icon={faCoffee}/>}>\n                  <Step title={i18n.t('register.basicInfo')}/>\n                  <Step title={i18n.t('register.personalInfo')}/>\n                </Steps>\n              </div>\n            }\n            {\n              current === 2 &&\n              <div>\n                <FontAwesomeIcon icon={faCheckCircle} color=\"#46ce23\" size=\"4x\"/>\n                <h3 className=\"mt-4\">{i18n.t('register.welcome')}</h3>\n                <p>{i18n.t('register.emailMessage')}</p>\n                <Link className=\"btn btn-primary custom-btn\" to=\"/\">{i18n.t('register.toHome')}</Link>\n              </div>\n            }\n\n            <div className=\"mb-4\">\n              {\n                current === 0 &&\n                this.renderBasicForm() //TODO Pasar a componentes para evitar re-render\n              }\n              {\n                current === 1 &&\n                this.renderPersonalForm()\n              }\n            </div>\n            {this.renderButton()}\n            {\n              current <= 1 &&\n              <div style={{ marginTop: 8 }}>\n                <small><Link to=\"/\">{i18n.t('login.cancel')}</Link></small>\n              </div>\n            }\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default Register;\n","/**\n * Created by estebankramer on 15/10/2019.\n */\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport en from './en';\nimport es from './es';\n\n// not like to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .init({\n        fallbackLng: 'es',\n        debug: true,\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n        resources: {\n          es: {translation: es},\n          en: {translation: en},\n        },\n    });\n\n\nexport default i18n;","export default {\n  home: {\n      jumbotronTitle: '¿Buscas un médico?',\n      placeHolderDoctor: 'Nombre del médico',\n      labelDoctor: 'Buscar por nombre del médico',\n      placeHolderSpeciality: 'Especialidad',\n      placeHolderInsurance: 'Prepaga',\n      searchButton: \"Buscar\",\n      title: \"Sacar un turno nunca fue tan fácil\",\n      subtitle: \"Seguí estos simples pasos\",\n      searchTitle: \"Buscá\",\n      searchSubtitle: \"en nuestro catalogo de médicos\",\n      chooseTitle: \"Elegí\",\n      chooseSubtitle: \"el médico adecuado para tu condición\",\n      reserveTitle: \"Reservá\",\n      reserveSubtitle: \"un turno con un solo click\",\n      loadingSpecialties: 'Cargando especialidades...',\n      loadingInsurances: 'Cargando prepagas...',\n  },\n  navigation:{\n      title:'Waldoc',\n      patientRegistrationTitle: 'Registrarse como paciente',\n      doctorRegistrationTitle:'Registrarse como médico',\n      logInButton: 'Iniciar Sesión',\n      myAccountTitle: 'Mi Cuenta',\n      logOutButton: 'Cerrar Sesión',\n      noResults: 'No hay resultados',\n      changeFilters: 'Intenta cambiar los filtros de búsqueda',\n      filters:'Filtros',\n      register: 'Registrarse'\n  },\n  specialist:{\n      city: ', CABA',\n      favoriteTitle: 'Doctores favoritos',\n      description: 'Descripción',\n      insurancesPlans: 'Prepagas Médicas',\n      list: 'Cargar más resultados',\n      placeHolderName: 'Nombre...',\n      workingDay: 'Día de Atención',\n      notAvailable: 'no disponible',\n      studies: 'Estudios',\n      certificate: 'Certificados',\n      languages: 'Idiomas',\n  },\n  review:{\n      reviewThanks: '¡Gracias por compartir tu reseña con nosotros!',\n      register:'Registrate o iniciá sesión para dejar una reseña',\n      appointment: 'Solo podes dejar una reseña despúes de asistir a un turno',\n      stars: 'Estrellas',\n      starsOption: 'Elegir una opción',\n      comments: 'Comentarios',\n      placeHolderComments: 'Ingresá tu comentario',\n      button: 'Dejar reseña',\n      reviewTitle: 'Reseñas',\n      leaveReview: 'Dejá tu reseña'\n  },\n  appointment:{\n      at: ' a las ',\n      cancel: 'Cancelar Turno',\n      futureTitle: 'Turnos pendientes',\n      historicalTitle: 'Historial de turnos',\n      reserve: 'Reservar Turno',\n      selectDateTime: 'Seleccionar una fecha y horario disponible',\n      date: 'Fecha',\n      time: 'Horario',\n      error: 'No pudimos reservar el turno',\n      reserved: 'Turno Reservado',\n      close: 'Cerrar',\n      register:'Registrate o iniciá sesión para poder reservar un turno',\n  },\n  error:{\n      problem:'Hubo un problema',\n      error: 'Hubo un error',\n      toHome: 'Ir a la página principal'\n  },\n  login: {\n      welcome: 'Bienvenido',\n      email: 'Correo Electrónico',\n      placeHolderEmail: 'Ingresá tu correo electrónico',\n      password: 'Contraseña',\n      placeHolderasPsword: 'Ingresá tu contraseña',\n      error: 'Correo Electrónico o Contraseña inválidos',\n      accountQuestion:'¿No tenes una cuenta?',\n      register: 'Registrate',\n      registerPatient: 'Registrate como paciente',\n      registerDoctor: 'registrate como médico',\n      or: 'o',\n      cancel: 'Cancelar'\n  },\n  register:{\n      emptyField: 'El campo no puede quedar vacío',\n      studies: 'Estudios',\n      placeHolderStudies: 'Ingresá tus estudios',\n      descriptionStudies: 'Ingresá información sobre tus estudios',\n      descriptionCertificate: 'Ingresá información sobre tus títulos',\n      languages: 'Idiomas',\n      selectLanguages: 'Seleccioná uno o más idiomas',\n      speciality: 'Especialidades',\n      placeHolderSpeciality: 'Buscá tus especialidades',\n      selectSpeciality: 'Seleccioná una o más especialidades',\n      selectedSpeciality: 'Estas son las especialidades que agregaste:',\n      selectInsurance: 'Seleccioná los planes de las prepagas con las que trabajas',\n      selectInsuranceLabel: 'Seleccioná al menos un plan',\n      workingHours: 'Ingresá tus horarios de atención',\n      placeHolderWorkingHoursStart: 'Inicio (Ej: 9Hs)',\n      placeHolderWorkingHoursFinish: 'Fin (Ej: 18Hs)',\n      errorDay: 'Completá al menos un día',\n      continueButton: 'Continuar',\n      backButton: 'Atrás',\n      me: 'Registrarme',\n      completeProfTitle: 'Completá tu información profesional',\n      problem: 'Hubo un problema',\n      notRegister: 'No pudimos activar tu cuenta',\n      toHome: 'Ir a la página principal',\n      activatedAccount: 'Cuenta activada',\n      activatedAccessAccount: 'Ya podes acceder a tu cuenta',\n      licenseValidation: 'La licencia debe tener entre 0 y 10 dígitos',\n      emailValidation: 'Ingrese una correo electrónico válido',\n      validEmail: 'Correo Electrónico válido',\n      validPassword: 'La contraseña debe tener al menos 6 caracteres',\n      notMatchingPassword: 'Las contraseñas no coinciden',\n      matchingPassword: 'Las contraseñas coinciden',\n      confirmPassword:'Confirmar Contraseña',\n      placeHolderPassword: 'Ingresá tu contraseña',\n      name:'Nombre',\n      placeHolderName: 'Ingresá tu nombre',\n      validName: 'Ingresá un nombre válido',\n      lastName: 'Apellido',\n      placeHolderLastName: 'Ingresá tu apellido',\n      validLastName: 'Ingresá un apellido',\n      address: 'Dirección',\n      placeHolderAddress: 'Ingresá tu Dirección',\n      validAddress: 'Ingresá una dirección válida',\n      phoneNumber: 'Teléfono',\n      placeHolderPhoneNumber: 'Ingresá tu teléfono',\n      validPhoneNumber: 'Ingresá un número de teléfono válido',\n      gender: 'Sexo',\n      optionGender: 'Elegir una opción',\n      male: 'Masculino',\n      female: 'Femenino',\n      license: 'Licencia Profesional',\n      placeHolderLicense: 'Ingresá tu licencia',\n      asPatient: 'Registrate como paciente',\n      asDoctor: 'Registrate como médico',\n      basicInfo: 'Datos Básicos',\n      personalInfo: 'Datos Personales',\n      welcome: 'Bienvenido a Waldoc',\n      emailMessage: 'En breve, vas recibir un correo electrónico para confirmar tu cuenta',\n      photo: 'Foto de perfil',\n      photoUpload: 'Arrastrá tu foto acá o hace click en la caja',\n      photoUploadError: 'El archivo debe ser de tipo imagen',\n      certificate: 'Titulos',\n      placeHolderCertificate: 'Ingresá tus titulos académicos',\n      repeatedEmail: 'El email ya esta siendo utilizado',\n      repeatedLicense: 'La licencia ya esta siendo utilizada'\n  },\n  favorite:{\n      remove: 'Eliminar de favoritos',\n      add: 'Agregar a favoritos',\n\n  },\n  week: {\n      monday:'Lunes',\n      tuesday:'Martes',\n      wednesday:'Miércoles',\n      thursday:'Jueves',\n      friday:'Viernes',\n      saturday:'Sábado',\n      sunday: 'Domingo'\n  },\n  account: {\n    accountInfo: 'Mi Cuenta',\n    patientAppointments: 'Turnos Como Médico',\n    noResults: 'No tenés'\n  }\n}\n","export default {\n    home: {\n        jumbotronTitle: 'Looking for a doctor?',\n        placeHolderDoctor: 'Doctor\\'s name',\n        labelDoctor: 'Search by doctor\\'s name ',\n        placeHolderSpeciality: 'Speciality',\n        placeHolderInsurance: 'Medical Care',\n        searchButton: 'Search',\n        title: \"Feeling ill? Waldoc has you covered\",\n        subtitle: \"Booking appointments has never been easier\",\n        searchTitle: \"Search\",\n        searchSubtitle: \"our catalogue of qualified doctors\",\n        chooseTitle: \"Choose\",\n        chooseSubtitle: \"the doctor that's right for your condition\",\n        reserveTitle: \"Book\",\n        reserveSubtitle: \"an appointment with one click\",\n        loadingSpecialties: 'Loading specialties...',\n        loadingInsurances: 'Loading medical care...',\n\n    },\n    navigation:{\n        title:'Waldoc',\n        patientRegistrationTitle: 'Sign up as a patient',\n        doctorRegistrationTitle:'Sign up as a doctor',\n        logInButton: 'Log In',\n        myAccountTitle: 'My Account',\n        logOutButton: 'Log Out',\n        noResults: 'There are no results',\n        changeFilters: 'Change search filters',\n        filters:'Filters',\n        register: 'Sign Up'\n    },\n    specialist:{\n        city: ', CABA',\n        favoriteTitle: 'Favorite Doctors',\n        description: 'Description',\n        insurancesPlans: 'Medical Care',\n        list: 'Load more results',\n        placeHolderName: 'Name...',\n        workingDay: 'Day',\n        notAvailable: 'not available',\n        studies: 'Studies',\n        certificate: 'Certificate',\n        languages: 'Languages',\n    },\n    review:{\n        reviewThanks: 'Thank you for sharing your review with us!',\n        register:'Sign up or log in to submit a review',\n        appointment: 'You can only leave a review after attending an appointment',\n        stars: 'Stars',\n        starsOption: 'Choose an option',\n        comments: 'Comments',\n        placeHolderComments: 'Leave your comment',\n        button: 'Leave Review',\n        reviewTitle: 'Reviews',\n        leaveReview: 'Leave your Review'\n    },\n    appointment:{\n        at: ' at ',\n        cancel: 'Cancel Appointment',\n        futureTitle: 'Pending Appointments',\n        historicalTitle: 'Previous Appointments',\n        reserve: 'Reserve an Appointment',\n        selectDateTime: 'Select an available date and time',\n        date: 'Date',\n        time: 'Time',\n        error: 'We couldn\\'t reserve your appointment',\n        reserved: 'Reserved Appointment',\n        close: 'Close',\n        register:'Sign up or log in to reserve an appointment'\n    },\n    error:{\n        problem:'There was a problem',\n        error: 'There was an error',\n        toHome: 'Go to Home Page'\n    },\n    login: {\n        welcome: 'Welcome',\n        email: 'Email',\n        placeHolderEmail: 'Enter your email',\n        password: 'Password',\n        placeHolderasPsword: 'Enter your password',\n        error: 'Not valid email or password',\n        accountQuestion:'Don\\'t have an account?',\n        register: 'Sign up',\n        registerPatient: 'Sign up as a patient',\n        registerDoctor: 'sign up as a doctor',\n        or: 'or',\n        cancel: 'Cancel'\n    },\n    register:{\n        emptyField: 'Field can not be left empty',\n        studies: 'Academic Studies',\n        placeHolderStudies: 'Enter your academic studies',\n        descriptionStudies: 'Enter information about your academic studies',\n        descriptionCertificate: 'Enter information about your academic certificates',\n        languages: 'Languages',\n        selectLanguages: 'Choose one or more languages',\n        speciality: 'Specialities',\n        placeHolderSpeciality: 'Search your specialities',\n        selectSpeciality: 'Choose one or more specialities',\n        selectedSpeciality: 'These are the specialities you added:',\n        selectInsurance: 'Choose the insurance plans you work with',\n        selectInsuranceLabel: 'Choose at least one insurance plan',\n        workingHours: 'Enter your working hours',\n        placeHolderWorkingHoursStart: 'Start (Ex: 9Hs)',\n        placeHolderWorkingHoursFinish: 'Fin (Ex: 18Hs)',\n        errorDay: 'Complete at least one day',\n        continueButton: 'Continue',\n        backButton: 'Back',\n        me: 'Send',\n        completeProfTitle: 'Complete your professional information',\n        problem: 'There was a problem',\n        notRegister: 'We coulnd\\'t activate your account',\n        toHome: 'Go to Home Page',\n        activatedAccount: 'Activated Account',\n        activatedAccessAccount: 'You can now access your account',\n        licenseValidation: 'The license must be between 0 and 10 digits',\n        emailValidation: 'Enter a valid email',\n        validEmail: 'Valid Email',\n        validPassword: 'Password must be at least 6 characters',\n        notMatchingPassword: 'Passwords do not match',\n        matchingPassword: 'Passwords match',\n        confirmPassword:'Confirm Password',\n        placeHolderPassword: 'Enter your password',\n        name:'Name',\n        placeHolderName: 'Enter your name',\n        validName: 'Enter a valid name',\n        lastName: 'Last Name',\n        placeHolderLastName: 'Enter your Last Name',\n        validLastName: 'Enter a valid Last Name',\n        address: 'Address',\n        placeHolderAddress: 'Enter your Address',\n        validAddress: 'Enter a valid Address',\n        phoneNumber: 'Phone Number',\n        placeHolderPhoneNumber: 'Enter your Phone Number',\n        validPhoneNumber: 'Enter a valid Phone Number',\n        gender: 'Gender',\n        optionGender: 'Choose an option',\n        male: 'Male',\n        female: 'Female',\n        license: 'Professional License',\n        placeHolderLicense: 'Enter your professional license',\n        asPatient: 'Sign up as a patient',\n        asDoctor: 'Sign up as a doctor',\n        basicInfo: 'Basic Data',\n        personalInfo: 'Personal Data',\n        welcome: 'Welcome to Waldoc',\n        emailMessage: 'Soon, you will receive an email to confirm your account',\n        photo: 'Profile picture',\n        photoUpload: 'Upload your photo by dragging it here or clicking on the box',\n        photoUploadError: 'The file must be an image',\n        certificate: 'Certificates',\n        placeHolderCertificate: 'Enter your academic certificates',\n        repeatedEmail: 'The email address is already being used',\n        repeatedLicense: 'The license is already being used',\n    },\n    favorite:{\n        remove: 'Remove from favorites',\n        add: 'Add to favorites'\n    },\n    week: {\n        monday:'Monday',\n        tuesday:'Tuesday',\n        wednesday:'Wednesday',\n        thursday:'Thursday',\n        friday:'Friday',\n        saturday:'Saturday',\n        sunday: 'Sunday'\n    },\n    account: {\n      accountInfo: 'Account Information',\n      patientAppointments: 'Appointments As Doctor',\n      noResults: 'No'\n    }\n}","/**\n * Created by estebankramer on 14/10/2019.\n */\n//BACKEND URL\n\nexport const API_URL = 'http://pawserver.it.itba.edu.ar/paw-2018b-06/';\n","import axios from 'axios';\nimport { API_URL } from \"../constants/constants\";\n\nclass BaseClient {\n  constructor(props) {\n\n    let token;\n    if (props && props.user) {\n      token = props.user.auth;\n\n    }\n\n    const headers = {\n      'X-AUTH-TOKEN': token,\n      'Content-Type': 'application/json; charset=utf-8'\n    };\n\n    this.instance = axios.create({\n      baseURL: API_URL,\n      timeout: 60000 * 2,\n      headers,\n    });\n\n    this.instance.interceptors.response.use(\n      (response) => {\n        return response;\n      }, (error) => {\n        let errorResponse = error.response;\n        if(!errorResponse) {\n          props.history.push('/error/Error');\n        }\n        if (errorResponse.status === 401) {\n          props.history.push('/error/401');\n        }\n        if (errorResponse.status === 403) {\n          props.history.push('/error/403');\n        }\n        if (errorResponse.status === 500) {\n          props.history.push('/error/500');\n        }\n        return Promise.reject(error);\n      });\n  }\n}\n\nexport default BaseClient;\n","import BaseClient from './BaseClient';\nimport queryString from 'query-string';\n\n\nclass ApiClient extends BaseClient {\n  get(url, conf = {}) {\n    return this.instance.get(url, conf)\n      .then(response => Promise.resolve(response))\n      .catch(error => Promise.reject(error));\n  }\n\n  delete(url, conf = {}) {\n    return this.instance.delete(url, conf)\n      .then(response => Promise.resolve(response))\n      .catch(error => Promise.reject(error));\n  }\n\n  head(url, conf = {}) {\n    return this.instance.head(url, conf)\n      .then(response => Promise.resolve(response))\n      .catch(error => Promise.reject(error));\n  }\n\n  options(url, conf = {}) {\n    return this.instance.options(url, conf)\n      .then(response => Promise.resolve(response))\n      .catch(error => Promise.reject(error));\n  }\n\n  post(url, data = {}, conf = {}) {\n    return this.instance.post(url, data, conf)\n      .then(response => Promise.resolve(response))\n      .catch(error => Promise.reject(error));\n  }\n\n  put(url, data = {}, conf = {}) {\n    return this.instance.put(url, data, conf)\n      .then(response => Promise.resolve(response))\n      .catch(error => Promise.reject(error));\n  }\n\n  patch(url, data = {}, conf = {}) {\n    return this.instance.patch(url, data, conf)\n      .then(response => Promise.resolve(response))\n      .catch(error => Promise.reject(error));\n  }\n}\n\nexport { ApiClient }"],"sourceRoot":""}