{"version":3,"sources":["components/navigation/header.js","components/navigation/footer.js","components/home/jumbotronSearch.js","components/home/steps.js","pages/home/index.js","components/specialist/card.js","pages/specialists/index.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","pathname","this","props","location","className","style","backgroundColor","paddingBottom","href","borderColor","color","type","React","Component","Footer","class","JumbotronSearch","marginBottom","top","cascade","action","method","modelAttribute","accept-charset","aria-label","placeholder","path","id","cssStyle","value","label","selected","to","textDecoration","Steps","src","Home","SpecialistCard","paddingRight","Specialists","App","component","HeaderWithRouter","withRouter","Header","exact","Boolean","window","hostname","match","target","document","querySelector","render"],"mappings":"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","file":"static/js/main.f9580165.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\n\nclass Navigation extends React.Component {\n  render() {\n    const { pathname } = this.props.location;\n    return(\n      <nav className=\"navbar navbar-dark\" style={{ backgroundColor: pathname === '/' ? '#FFFFFF' : '#257CBF', paddingBottom: 0 }}>\n        <div className=\"container\">\n            <a className=\"navbar-brand\" href=\"/\">\n                <h1 className={pathname === '/' ? 'navbar-brand-home' : ''}><strong>Waldoc</strong></h1>\n            </a>\n            <a href=\"/login\">\n                <div className=\"row\">\n                    <div className=\"center-vertical\">\n                      <button className=\"btn btn-light\" style={{ backgroundColor: 'transparent', borderColor: 'transparent', color: '#257CBF' }} type=\"button\">\n                        Iniciar Sesion\n                      </button>\n                    </div>\n                </div>\n            </a>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst Footer = () => {\n  return(\n    <div>\n      <div class=\"container\">\n        <p class=\"footer-text\">© Copyright 2019. Waldoc</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\n\nclass JumbotronSearch extends React.Component {\n  render() {\n    return(\n      <div className=\"jumbotron jumbotron-background min-vh-100\">\n          <div className=\"container\" style={{ marginBottom: 120 }}>\n              <Fade top cascade>\n                <p className=\"jumbotron-subtitle fadeIn\">¿Te sentis mal? Busca entre los mejores medicos</p>\n                <div className=\"navbar-search-home\">\n                    <form action=\"${processForm}\" method=\"POST\" modelAttribute=\"search\" accept-charset=\"ISO-8859-1\">\n                        <div className=\"input-group container\">\n                            <input type=\"text\" aria-label=\"Buscar por nombre del médico\" placeholder=\"Nombre\" className=\"form-control\" path=\"name\"/>\n                            <select className=\"custom-select\" id=\"speciality\" path=\"specialty\" cssStyle=\"cursor: pointer;\">\n                              <option value=\"noSpecialty\" label=\"Especialidad\" selected=\"Especialidad\"/>\n                            </select>\n                            <input type=\"text\" aria-label=\"Buscar por especialidad\" placeholder=\"Especialidad\" className=\"form-control\" path=\"specialty\"/>\n                            <select className=\"custom-select\" id=\"insurance\" path=\"insurance\" cssStyle=\"cursor: pointer;\">\n                                <option value=\"no\" label=\"Prepaga\" selected=\"Prepaga\"/>\n                            </select>\n                            <div className=\"input-group-append\">\n                                <Link className=\"btn btn-primary custom-btn\" to=\"/specialists\" style={{ textDecoration: 'none', color: '#FFF' }}>\n                                  Buscar\n                                </Link>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n              </Fade>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default JumbotronSearch;\n","import React from 'react'\nimport Fade from 'react-reveal/Fade';\n\nconst Steps = () => {\n  return(\n    <div class=\"container\">\n        <div class=\"margin-big\">\n            <p class=\"jumbotron-subtitle\">Titulo</p>\n            <p class=\"jumbotron-text\">Subtitulo</p>\n        </div>\n\n        <div class=\"d-flex flex-row margin-bottom-medium\">\n            <img src=\"https://i.imgur.com/StIDems.jpg\" class=\"image-rectangle\" />\n            <div>\n                <div class=\"list-home\">\n                    <h3>Titulo</h3>\n                    <p class=\"doctor-text\">Subtitulo</p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"d-flex flex-row-reverse margin-bottom-medium\">\n            <img src=\"https://i.imgur.com/N7X4FiE.jpg\" class=\"image-rectangle-right\" />\n            <div>\n                <div class=\"list-home-right\">\n                    <h3>Titulo</h3>\n                    <p>Subtitulo</p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"d-flex flex-row margin-bottom-medium\">\n            <img src=\"https://i.imgur.com/yjHKj1P.jpg\" class=\"image-rectangle\" />\n            <div>\n                <div class=\"list-home\">\n                    <h3>Titulo</h3>\n                    <p>Subtitulo</p>\n                </div>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Steps\n","import React from 'react'\n\nimport JumbotronSearch from '../../components/home/jumbotronSearch';\nimport Steps from '../../components/home/steps';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className=\"body-background\">\n        <JumbotronSearch />\n        <Steps />\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nclass SpecialistCard extends React.Component {\n  render() {\n    return(\n      <div className=\"card card-doctor d-flex flex-row box\">\n          <img src=\"https://d1k13df5m14swc.cloudfront.net/photos/Dr-Steven-Radowitz-MD-413-circle_medium__v1__.png\" className=\"avatar\" />\n          <div className=\"card-body\">\n              <div className=\"card-text\">\n                  <h3 className=\"doctor-name\">Nombre Apellido</h3>\n                  <div className=\"row container\">\n                      <p className=\"doctor-specialty\" style={{ paddingRight: 20 }}>Especialidades</p>\n                  </div>\n                  <p className=\"doctor-text\">Certificado</p>\n                  <div className=\"row container\">\n                      <i className=\"fas fa-star star-yellow\"></i>\n                      <i className=\"fas fa-star star-yellow\"></i>\n                      <i className=\"fas fa-star star-yellow\"></i>\n                      <i className=\"fas fa-star star-yellow\"></i>\n                      <i className=\"fas fa-star star-grey\"></i>\n                  </div>\n                  <p className=\"doctor-text\">\"Muy buena atención, muy puntual\"</p>\n                  <p className=\"doctor-text\"><i className=\"far fa-clock\"></i>8 - 20pm</p>\n                  <p className=\"doctor-text\"><i className=\"fas fa-map-marker-alt\"></i> Libertador 1000, CABA</p>\n              </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default SpecialistCard;\n","import React from 'react'\n\nimport SpecialistCard from '../../components/specialist/card';\n\nclass Specialists extends React.Component {\n  render() {\n    return (\n      <div className=\"body-background\">\n        <div className=\"main-container\">\n          <div className=\"col-md-9\">\n            <SpecialistCard />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Specialists;\n","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom'\nimport { withRouter } from \"react-router\";\nimport './App.css';\n\nimport Header from './components/navigation/header'\nimport Footer from './components/navigation/footer'\nimport Home from './pages/home'\nimport Specialists from './pages/specialists'\n\nconst App = props => {\n  let everyoneRoutes = [\n    { path: \"/\", component: Home },\n  ];\n  let doctorRoutes = [\n    ...everyoneRoutes\n  ];\n  const HeaderWithRouter = withRouter(Header);\n  return(\n    <div>\n      <HeaderWithRouter />\n      <main>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/specialists\" component={Specialists} />\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport { render } from 'react-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst target = document.querySelector('#root')\nrender(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ,target)\n"],"sourceRoot":""}